{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initialize","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","responseJson","setState","data","catch","error","console","stop","state","_this2","length","react_default","createElement","className","style","width","float","renderList","education","profiles","publicity","interests","id","align","projects","map","project","i","renderProject","image","title","subtext","linkTo","experiments","url","key","href","backgroundImage","concat","list","_this3","HalfDiv","item","renderTextListItem","text","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a045503d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport fetch from \"isomorphic-fetch\";\n\nimport \"./App.scss\";\n\ntype TextItem = {\n  text: string,\n  linkTo: string\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  render() {\n    if (this.state.data.length === 0) return <div />;\n    return (\n      <div className=\"App\">\n        <div style={{ width: \"100%\", float: \"left\" }}>\n          {this.renderList(\"Education\", this.state.data.education)}\n          {this.renderList(\"Profiles\", this.state.data.profiles)}\n        </div>\n        <div style={{ width: \"100%\", float: \"left\" }}>\n          {this.renderList(\"Publicity\", this.state.data.publicity)}\n          {this.renderList(\n            \"Interests & Characteristics\",\n            this.state.data.interests\n          )}\n        </div>\n        <div style={{ width: \"100%\", float: \"left\" }}>\n          <h2 id=\"works\">Finished Projects & Works</h2>\n          <div style={{ width: \"100%\", float: \"left\" }} align=\"left\">\n            Due to privacy policies of some of my clients, I can not publicly\n            share direct demos of some projects. Please contact for further\n            information.\n            <p>\n              This section of the portfolio was last updated on 2017 March.\n              Please visit my LinkedIn profile for more up-to-date portfolio.\n            </p>\n          </div>\n          <div className=\"App-intro\">\n            {this.state.data.projects.map((project, i) => {\n              return this.renderProject(\n                project.image,\n                project.title,\n                project.subtext,\n                project.linkTo,\n                i\n              );\n            })}\n          </div>\n        </div>\n        <div style={{ width: \"100%\", float: \"left\" }}>\n          <h2 id=\"works\">Experiments & Concept Projects</h2>\n          <div className=\"App-intro\">\n            {this.state.data.experiments.map((project, i) => {\n              return this.renderProject(\n                project.image,\n                project.title,\n                project.subtext,\n                project.linkTo,\n                i\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  componentDidMount() {\n    this.initialize();\n  }\n\n  initialize = async () => {\n    await fetch(\"data.json\")\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({\n          data: responseJson\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  renderProject(\n    url: string,\n    title: string,\n    subtext: string,\n    linkTo: string,\n    key: number\n  ) {\n    return (\n      <div key={key}>\n        <a href={linkTo} className=\"endislink\">\n          <div className=\"endis\">\n            <div\n              className=\"resim\"\n              style={{\n                backgroundImage: `url(\n                  ${url})`\n              }}\n            >\n              <div className=\"caption\">\n                <div>\n                  {title}{\" \"}\n                  {subtext && <span className=\"subtext\">({subtext})</span>}\n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n    );\n  }\n\n  renderList(title: string, list: Array<TextItem>) {\n    return (\n      <div style={HalfDiv}>\n        <h2>{title}</h2>\n        <ul>\n          {list.map((item, i) => {\n            return this.renderTextListItem(item.text, item.linkTo, i);\n          })}\n        </ul>\n      </div>\n    );\n  }\n  renderTextListItem(text: string, linkTo: string, key: number) {\n    return (\n      <li key={key}>\n        {linkTo ? <a href={linkTo}>{text}</a> : <span>{text}</span>}\n      </li>\n    );\n  }\n}\n\nconst HalfDiv = {\n  width: \"50%\",\n  float: \"left\"\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}